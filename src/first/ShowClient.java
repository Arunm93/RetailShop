/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package first;

import java.awt.Color;
import java.awt.Container;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author ArUn
 */
public class ShowClient extends javax.swing.JFrame {

    /**
     * Creates new form ShowClient
     */
    private String referencedCompany;
    public ShowClient(String companyName) {
        this.setVisible(true);
        initComponents();
        this.setSize(800, 800);
        this.referencedCompany=companyName;
        OutStandingAmount();
        fetchClient(this.referencedCompany);
        jSeparator1.setSize(800, 10);
        Container c= this.getContentPane();
        c.setBackground(Color.white);
        
    }
    public void OutStandingAmount()
    {
        try{
            Class.forName("com.mysql.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/FirstDB", "root", "arun");
            String sqlPullOld="Select clientname,outstandingamount from clientdetails where companyname=?";
            PreparedStatement stmt3=conn.prepareStatement(sqlPullOld);
            stmt3.setString(1, this.referencedCompany);
            ResultSet rs1=stmt3.executeQuery();
            Double totalAmount=0.0;
            while(rs1.next())
            {
                totalAmount=rs1.getDouble("outstandingamount");
                System.out.println("totalAmount"+totalAmount);
                String sqlPull="Select amount,vat,addTax from billdetails where companyname=? and clientname=?";
                PreparedStatement stmt1=conn.prepareStatement(sqlPull);
                stmt1.setString(1, this.referencedCompany);
                stmt1.setString(2,rs1.getString("clientname"));
                ResultSet rs=stmt1.executeQuery();
                Double midAmount=0.0;
                while(rs.next())
                    {
                        midAmount+=rs.getDouble("amount")+rs.getDouble("vat")+rs.getDouble("addTax");
                    }
                System.out.println("billdetails successfully pulled"+midAmount);
                if(midAmount!=totalAmount)
                {
                    totalAmount=midAmount;
                    String sqlUpdate="Update clientdetails set outstandingamount=? where companyname=? and clientname=?";
                    PreparedStatement stmt2=conn.prepareStatement(sqlUpdate);
                    stmt2.setDouble(1,totalAmount);
                    stmt2.setString(2, this.referencedCompany);
                    stmt2.setString(3,rs1.getString("clientname"));
                    int rowint1=stmt2.executeUpdate(); //Run the query
                    System.out.println("clientdetails successfully added");}
            }
            conn.close();
        }catch (SQLException ex) {
            Logger.getLogger(AddCompany.class.getName()).log(Level.SEVERE, null, ex);
        }  catch (ClassNotFoundException ex) {
            Logger.getLogger(AddCompany.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
public void fetchClient(String companyName)
{
    try {

            Class.forName("com.mysql.jdbc.Driver"); //Driver Load
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/FirstDB", "root", "arun"); //Connection establish
            String sql = "select * from clientdetails where companyname=?"; //query for DB
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setString(1, this.referencedCompany);
            ResultSet rs=statement.executeQuery();
                    
            clientDetails.setModel(DbUtils.resultSetToTableModel(rs));
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(AddCompany.class.getName()).log(Level.SEVERE, null, ex);
        }  catch (ClassNotFoundException ex) {
            Logger.getLogger(AddCompany.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        clientDetails = new javax.swing.JTable();

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Client Details");

        clientDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Client Name", "GST No", "CST No", "PAN No", "Tin No", "Address", "Contact", "Choose"
            }
        ));
        jScrollPane3.setViewportView(clientDetails);
        clientDetails.getAccessibleContext().setAccessibleName("clientDetails");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 516, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShowClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShowClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShowClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShowClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShowClient("").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable clientDetails;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
